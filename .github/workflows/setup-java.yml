name: Setup-java
on:
  workflow_dispatch:
  

jobs:
#   test-ip-ubuntu:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [macos-11]
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3
#     - uses: actions/setup-node@v3
#       with:
#         node-version: 18
#         check-latest: true
#     - run: node --version



#   build-linux:
#     # Build Linux binaries, ready for release.
#     # This runs inside an Alpine Linux container so we can more easily create a
#     # statically linked binary.
#     runs-on: ubuntu-latest
#     container:
#       image: alpine:3.16
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - run: apk add tar git openssh gcompat make g++ ruby
#       - name: Install Go
#         uses: dmitry-shibanov/setup-go@v-dmshib/test-command-output
#         with:
#           go-version: '1.18'
#       - run: go env GOMODCACHE
          
          
  test-setup-python:
    runs-on: ${{ matrix.os }}
    strategy:
#       fail-fast: false
      matrix:
        os: [windows-latest, macos-lates, ubuntu-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: dmitry-shibanov/setup-node@v-dmshib/add-nightly-support
      with:
        node-version: 17-nightly
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/add-nightly-support
      with:
        node-version: 17-nightly
    - run: node --version
    - uses: actions/setup-go@v3
      with:
        go-version: '1.18.0-rc' # The Go version to download (if necessary) and use.
    - run: go version
    - uses: dmitry-shibanov/setup-node@v-dmshib/add-nightly-support
      with:
        node-version: 17.0.0-rc.x
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/add-nightly-support
      with:
        node-version: 17.0.0-rc.x
    - run: node --version
