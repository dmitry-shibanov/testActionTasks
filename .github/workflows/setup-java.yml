name: Setup-java
on:
  workflow_dispatch:
  
jobs:
  test-ip-ubuntu:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
#     env:
#       PIP_DISABLE_PIP_VERSION_CHECK: 1
#       PIP_NO_PYTHON_VERSION_WARNING: 1
#       PIP_ROOT_USER_ACTION: ignore
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
        version: [3.11, 3.12-dev]
    steps:
      # - run: |
      #     sudo apt-get update
      #     sudo apt-get install -y --allow-downgrades python3-tk
# #     - run: rm -rf /opt/hostedtoolcache/PyPy/*
      - run: echo $PATH
      - run: ls /usr/local/bin
      - run: /usr/local/bin/python --version
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}

#     - run: pip install numpy
      - run: python --version
      - run: /usr/local/bin/python --version
      - run: ls /usr/local/bin
      - run: which python
      - run: echo $PATH
#       - name: Checkout
#         uses: actions/checkout@v3
# #         with:
# #           repository: pytorch/TensorRT
# #           ref: main
    
    
# #       - run: echo $env:PATH
# #         shell: pwsh
# #       - name: Download python 2.7
# #         run: |
# #           wget https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz -O ${{ runner.temp }}/python-3.10.12-linux-20.04-x64.tar.gz
# #           echo "temporary directory"
# #           ls ${{ runner.temp }}
# #           echo "unpack tar.gz"
# #           mkdir ${{ runner.temp }}/python-3.10.12-linux-20.04-x64
# #           tar -xzvf ${{ runner.temp }}/python-3.10.12-linux-20.04-x64.tar.gz -C ${{ runner.temp }}/python-3.10.12-linux-20.04-x64
# #           echo "temporary directory"
# #           ls ${{ runner.temp }}
#       - run: echo ${{ runner.temp }}
#       - run: node -e "const os = require('os');console.log(os.tmpdir())"
#       - run: node -e "console.log(process.env.RUNNER_TEMP)"
# #       - name: Setup NodeJS
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: 18
# #           architecture: arm64
# #       - run: pip install pandas
# #       - run: python -m pip install --upgrade pip==22.3.1
# #       - run: python3 -m pip debug
#       - name: Run script
#         run: |
#           echo "run script"
#           bash setup.sh
#         working-directory: ${{ runner.temp }}/python-3.10.12-linux-20.04-x64
#       - run: echo "/opt/hostedtoolcache/Python/3.10.12/x64/" >> $GITHUB_PATH
#       - run: python --version



  test-setup-python-pipenv:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
    steps:
    - name: Setup Go
      uses: actions/setup-go@v3 # louislam/setup-node@fix-armv7-cache 
      with:
        go-version: 1.21.0-rc.3
    - run: go version
#     - name: Setup Python
#       uses: actions/setup-python@v4 # louislam/setup-node@fix-armv7-cache 
#       with:
#         python-version: 3.7
        
#     - run: python --version
#     - run: pip --version
#     - run: pip cache dir
#     - run: sudo pip --version
#     - run: sudo pip cache dir
#     - run: sudo pip install numpy --no-binary :all
#     - run: sudo ls $(sudo pip cache dir)
#     - run: sudo ls /home/runner/.cache/pip
#     - run: pip cache dir
#     - run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
#     - run: pipenv install flake8==6.0.0 numpy==1.25.1 # --python 3.9
#     - run: ls
#     - run: cat Pipfile
#     - run: cat Pipfile.lock


#   test-setup-node-v3:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-20.04, ubuntu-22.04]
#         architecture: [arm, armv7l]
#     steps:
#     - name: Setup Node.js
#       uses: actions/setup-node@v3 # louislam/setup-node@fix-armv7-cache 
#       id: setup-node
#       with:
#         node-version: 16
#         architecture: ${{ matrix.architecture }}
        
#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 16
#         architecture: ${{ matrix.architecture }}



#   setup-node-v3-previous:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-20.04, ubuntu-22.04]
#         architecture: [x64]
#     steps:
#     - name: Setup Node.js
#       uses: actions/setup-node@v3 # louislam/setup-node@fix-armv7-cache 
#       id: setup-node
#       with:
#         node-version: 12
#         architecture: ${{ matrix.architecture }}
        
#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 12
#         architecture: ${{ matrix.architecture }}      
      
