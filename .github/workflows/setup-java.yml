name: Setup-java
on:
  workflow_dispatch:
  

jobs:
#   test-ip-ubuntu:
#     runs-on: ${{ matrix.os }}
#     env:
#       PIP_DISABLE_PIP_VERSION_CHECK: 1
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-22.04, windows-latest, macos-latest]
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
# #       - uses: actions/setup-python@v4
# #         with:
# #           python-version: "2.7"
# # #       - name: python-check
# # #         run: python3.9 -V
# # #         shell: bash
# #       - run: python --version
#       - name: Setup Go
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.14
#       - run: go version
#       - run: go env GOMODCACHE
#       - run: go env GOCACHE
#       - name: Setup Go oldstable
#         uses: dmitry-shibanov/setup-go@test-dist-aliases
#         with:
#           go-version: oldstable
#           check-latest: true
#       - run: go version
# #       - name: Setup Go oldstable
# #         uses: dmitry-shibanov/setup-go@test-dist-aliases
# #         with:
# #           go-version: oldstable
# #           check-latest: true
# #           architecture: arm64
#       - run: go version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version: |
#               8
#               11
#               17
#           distribution: temurin
#       - run: java -version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version: 17
#           distribution: oracle
#       - run: java -version
#       - name: Setup Java
#         uses: actions/setup-java@v3
#         with:
#           java-version: 15
#           distribution: corretto
#       - run: java -version
#       - run: go version
# #     - name: Checkout repository
# #       uses: actions/checkout@v3
#     - run: git clone https://github.com/tox-dev/tox.git .
#     - uses: dmitry-shibanov/setup-python@v-dmshib/install-multiple-python-versions
#       with:
#         python-version: |
#               3.10
#               3.9
#               3.8
#               3.7
#               3.6
# #     - run: echo $pythonLocation        
#     - run: python --version
#     - run: pip install tox
#     - run: tox -e py27,py36,py37,py38,py39,py310 -p all



#   setup-go-aliases:
#     name: ${{ matrix.os }} ${{ matrix.alias }} ${{ matrix.arch }} ${{ matrix.check-latest }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-22.04, windows-latest, macos-latest]
#         alias: [stable, oldstable, 1.17, 1.19.1, 1.20.0-rc1.]
#         arch: [x64, x32, arm, armv6l]
#         check-latest: [true, false]
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - name: Setup Go oldstable
#         uses: actions/setup-go@main
#         with:
#           go-version: ${{ matrix.alias }}
#           check-latest: ${{ matrix.check-latest }}
#           architecture: ${{ matrix.arch }}
#       - run: go version
#       - name: Setup Go oldstable
#         uses: actions/setup-go@main
#         with:
#           go-version: ${{ matrix.alias }}
#           check-latest: ${{ matrix.check-latest }}
#           architecture: ${{ matrix.arch }}
#       - run: go version


#   issue_candidate:
#     runs-on: ubuntu-20.04

#     container:
#       image: ${{ matrix.os }}

#     strategy:
#       fail-fast: false

#       matrix:
#         os:
#           - 'centos:7'
#         python:
#           - '3.6'
#           - '3.7'
#           - '3.8'
#           - '3.9'
#           - '3.10'
#     steps:
#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python }}

#       - name: Check that Python is ok
#         run: python --version

#   build-linux:
#     # Build Linux binaries, ready for release.
#     # This runs inside an Alpine Linux container so we can more easily create a
#     # statically linked binary.
#     runs-on: ubuntu-latest
#     container:
#       image: alpine:3.16
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - run: apk add tar git openssh gcompat make g++ ruby
#       - name: Install Go
#         uses: dmitry-shibanov/setup-go@v-dmshib/test-command-output
#         with:
#           go-version: '1.18'
#       - run: go env GOMODCACHE
          
  setup-node-check-latest:
    name: CheckLatest ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 20.0.0-nightly202211061f517130dd
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 20-nightly
        check-latest: true
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 16-nightly
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 16
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 16
        check-latest: true
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 20.0.0-v8-canary20221103f7e2421e91
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 20.0.0-v8-canary
        check-latest: true
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: 16-v8-canary
        check-latest: true
    - run: node --version

  setup-node-toolcache:
    name: ToolCache ${{ matrix.os }} ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        version: [17-nightly, 18-nightly, 17.0.0-nightly, 16.0.0-nightly, 19.0.0-nightly202204201fe5d56403, 17.0.0-rc.1, 17.0.0-rc.2, 20-v8-canary, 20.0.0-v8-canary, 20.0.0-v8-canary20221103f7e2421e91]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory # dmitry-shibanov/setup-node@v-dmshib/fix-for-v8-canary
      with:
        node-version: ${{ matrix.version }}
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: ${{ matrix.version }}
    - run: node --version

  setup-node-stable-versions:
    name: Stable ${{ matrix.os }} ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        version: [16, 17, 18, 19.2.0, 19.1, lts/-2, latest, lts/gallium]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory # dmitry-shibanov/setup-node@v-dmshib/fix-for-v8-canary
      with:
        node-version: ${{ matrix.version }}
    - run: node --version
    - uses: dmitry-shibanov/setup-node@v-dmshib/v8-canary-factory
      with:
        node-version: ${{ matrix.version }}
    - run: node --version


#   setup-java-microsoft:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [windows-latest, ubuntu-latest, macos-latest]
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3
#     - uses: panticmilos/setup-go@vmpantic/add-stable-alias
#       with:
#         go-version: 1.19.4
#         architecture: x32
#     - run: go version
#     - uses: panticmilos/setup-go@vmpantic/add-stable-alias
#       with:
#         go-version: 1.19.4
#         architecture: x32
#     - run: go version
    
#   setup-java-major-file:
#     name: Major ${{ matrix.os }} ${{ matrix.version }} ${{ matrix.distribution }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-22.04, windows-latest, macos-latest]
#         version: [1.8, 8, 17, 11]
#         distribution: ['temurin', 'adopt', 'zulu', 'liberica', 'microsoft', 'corretto']
#         exclude:
#         - distribution: microsoft
#           version: 8
#         - distribution: microsoft
#           version: 1.8
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - run: echo ${{ matrix.version }} >> .java-version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version-file: .java-version
#           distribution: ${{ matrix.distribution }}
#       - run: java -version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version-file: .java-version
#           distribution: ${{ matrix.distribution }}
#       - run: java -version

#   setup-java-major-minor-file:
#     name: Major Minor ${{ matrix.os }} ${{ matrix.version }} ${{ matrix.distribution }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-22.04, windows-latest, macos-latest]
#         version: [11.0, 8.0.302, 16.0.2+7]
#         distribution: ['temurin', 'zulu', 'liberica', 'adopt', 'microsoft', 'corretto']
#         exclude:
#         - distribution: microsoft
#           version: 8.0.302
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - run: echo ${{ matrix.version }} >> .java-version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version-file: .java-version
#           distribution: ${{ matrix.distribution }}
#       - run: java -version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version-file: .java-version
#           distribution: ${{ matrix.distribution }}
#       - run: java -version
  
#   setup-java-ea-versions:
#     name: EA ${{ matrix.os }} ${{ matrix.version }} ${{ matrix.distribution }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-22.04, windows-latest, macos-latest]
#         version: [17-ea, 15.0.0-ea, 15.0.0-ea.2, 15.0.0+2-ea, openjdk64-15.0.0+2-ea]
#         distribution: ['temurin', 'zulu', 'liberica', 'adopt', 'microsoft', 'corretto']
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - run: echo ${{ matrix.version }} >> .java-version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version-file: .java-version
#           distribution: ${{ matrix.distribution }}
#       - run: java -version
#       - name: Setup Java
#         uses: actions/setup-java@main
#         with:
#           java-version-file: .java-version
#           distribution: ${{ matrix.distribution }}
#       - run: java -version  

#   setup-javacorretto:
#     name: ${{ matrix.distribution }} ${{ matrix.version }} (jdk-x64) - ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [macos-latest, windows-latest, ubuntu-latest]
#         distribution: ['corretto', 'temurin' ] # internally 'adopt-hotspot' is the same as 'adopt'
#         version: ['8', '11', '16']
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: setup-java
#         uses: actions/setup-java@main
#         with:
#           java-version: ${{ matrix.version }}
#           distribution: ${{ matrix.distribution }}
#       - name: Verify Java
#         run: java -version
