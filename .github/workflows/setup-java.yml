name: Setup-java
on:
  workflow_dispatch:
  
env:
  RUNNER_TEMP: ''

jobs:
  test-ip-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
#     - name: Download Adopt OpenJDK file
#       run: |
#         if ($IsLinux) {
#           $downloadUrl = "https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz"
#           $localFilename = "java_package.tar.gz"
#         } elseif ($IsMacOS) {
#           $downloadUrl = "https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_mac_hotspot_11.0.10_9.tar.gz"
#           $localFilename = "java_package.tar.gz"
#         } elseif ($IsWindows) {
#           $downloadUrl = "https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.10_9.zip"
#           $localFilename = "java_package.zip"
#         }
#         echo "LocalFilename=$localFilename" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
#         (New-Object System.Net.WebClient).DownloadFile($downloadUrl, "$env:RUNNER_TEMP/$localFilename")
#       shell: pwsh
#     - name: setup-java
#       uses: akv-platform/setup-java@v-sdolin/issue-359
#       with:
#         distribution: 'jdkfile'
#         jdkFile: ${{ runner.temp }}/${{ env.LocalFilename }}
#         java-version: '11.0.0-ea'
#         architecture: x64
        
#     - name: setup-java
#       uses: akv-platform/setup-java@v-sdolin/issue-359
#       with:
#         distribution: 'jdkfile'
#         jdkFile: ${{ runner.temp }}/${{ env.LocalFilename }}
#         java-version: '11.0.0-ea'
#         architecture: x64
    - name: Setup go
      uses: actions/setup-go@main
      with:
        go-version: 1.17
        architecture: arm
    - run: go version
    - run: |
        echo "$AGENT_TOOLSDIRECTORY"
        echo "$RUNNER_TOOLCACHE"
        ls $AGENT_TOOLSDIRECTORY/PyPy
        rm -rf $AGENT_TOOLSDIRECTORY/Python/3.9.*
        rm -rf $AGENT_TOOLSDIRECTORY/PyPy/3.*
    - name: Set up Python
      uses: dmitry-shibanov/setup-python@v-dmshib/add-check-latest
      with:
        python-version: 3.9.11
    - run: |
        python --version
        echo "RUNNER_TEMP is $RUNNER_TEMP"
    - name: Set up Python
      uses: dmitry-shibanov/setup-python@v-dmshib/add-check-latest
      with:
        python-version: 3.9
        check-latest: true
    - run: python --version

    - name: Set up Python
      uses: dmitry-shibanov/setup-python@v-dmshib/add-check-latest
      with:
        python-version: pypy-3.7
    - run: python --version
    - name: Set up Python
      uses: dmitry-shibanov/setup-python@v-dmshib/add-check-latest
      with:
        python-version: pypy-3.7
        check-latest: true
    - run: python --version
#     - run: npm install
#   win-setup-node-action:
#     name: "WIN: Global npm install with setup-node action"
#     runs-on: windows-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 12
#       - run: npm --version
#       - name: Install latest npm version
#         run: npm install --global npm
#       - run: npm --version
#       - uses: actions/setup-python@v2
#         with:
#           python-version: '3.11.0-alpha.4'
# #       - run: python -m pip install --upgrade pip
#       - run: |
#           pip --version
#           node -e "
#             const { spawn } = require('child_process');
#             const pipCache = spawn('pip', ['cache', 'dir'], {shell: true});

#             pipCache.stdout.on('data', (data) => {
#               console.log('stdout:', data.toString());
#             });

#             pipCache.stderr.on('data', (data) => {
#               console.error('stderr:', data.toString());
#             });

#             pipCache.on('close', (code) => {
#               console.log('child process exited with code', code);
#             });
#             "


  win-preinstalled-node:
    runs-on: ubuntu-18.04
    container:
      image: milospantic17/armv6linux
    steps:
#       - uses: actions/checkout@v2
#       - run: node --version
      - name: Setup Go
        uses: Pantela996/setup-go@main
        with:
          go-version: '1.14'
          architecture: arm
      - run: go version
          
          
  test-setup-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - run: |
        JAVA_VERSION=8.0.302
        URL=https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u302-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u302b08.tar.gz
        echo $URL
        wget "$URL"
        JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.302-8/x64	
        mkdir -p $JAVA_HOME
        tar -xzf OpenJDK8U-jdk_x64_linux_hotspot_8u302b08.tar.gz --strip-components=1 -C $JAVA_HOME && sudo rm OpenJDK8U-jdk_x64_linux_hotspot_8u302b08.tar.gz
        ls /opt/hostedtoolcache
        ls /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk
        ls /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.332-9/x64
        ls /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.332-9
    - run: |
        ls /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.302-8/x64
        ls /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.302-8
    - uses: dmitry-shibanov/setup-java@v-dmshib/test-docker
      with:
        distribution: 'temurin'
        java-version: 8.0.302
        
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8.0.302'
#     - run: pnpm store path --silent
#     - run: pnpm store path
#     - name: Setup Node
#       uses: dmitry-shibanov/setup-node@fix-error-node-version
#       id: setup-node
#       with:
#         node-version: 14
#     - run: |
#         echo "${{ steps.setup-node.outputs.node-version }} check"
#     - run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
# #     - run: pipx install poetry
# #     - run: source $HOME/.poetry/env
# #     - run: poetry init -n
# #     - run: poetry env use "3.9"
#     - run: pipenv install flake8==4.0.1 numpy==1.23.0
#     - uses: actions/upload-artifact@v2
#       with:
#         name: my-artifact
#         path: |
#           Pipfile.lock
#           Pipfile
