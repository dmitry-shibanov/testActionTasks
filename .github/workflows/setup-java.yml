name: Setup-java
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
    steps:
#       - run: |
#           majorVersion=$(node -v | cut -d. -f1 | cut -d'v' -f2)
#           npm -v
#           npm i -g npm@7 --prefix=/usr/local/opt/node@$majorVersion
#           npm -v
      - uses: actions/checkout@v2

      - name: Setup-java
        uses: dmitry-shibanov/setup-java@v-dmshib/add-docs-microsoft
        with:
          distribution: microsoft
          java-version: 11
#           java-package: jre
          
      - run: java -version
      - uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '1.14.0-rc1'
      - name: Setup NODE
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn
      - run: |
          echo -e "let myVar;\n console.log(12);" >> check.js
          node check.js
      - run: yarn --prefer-offline



  test:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: |
          docker build --tag test-docker .
          $CID=$(docker run test-docker)
          docker logs $CID

#   pythonInContainer:
#     runs-on: ubuntu-latest
#     container:
#       image: python:3.11.0a3-windowsservercore
#     steps:
#       - run: python --version
  test-jekyll:
    runs-on: ubuntu-latest
    container: jekyll/jekyll:4.0
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Check node before setup-node
      run: node --version; npm --version; which -a node; echo $PATH
    - run: |
        ls /__t
        ls /__t/node
        ls /__t/node/16.13.1/
        ls /__t/node/16.13.1/x64
        ls /__t/node/16.13.1/x64/bin
    - name: set up node
      uses: actions/setup-node@v2
      with:
        node-version: 16
#         node-version-file: '.node-version'
#         cache: 'yarn'
    - name: get node version
      shell: /bin/bash -e {0}
      run: |
        ls /__t
        ls /__t/node
        ls /__t/node/16.13.1/
        ls /__t/node/16.13.1/x64
        ls /__t/node/16.13.1/x64/bin
        node --version; npm --version; which -a node; echo $PATH
      
#     - name: install correct yarn version
#       run: npm install --global --force yarn@1.22.17
#     - name: install dependencies
#       run: make yarn-install

  test-node-alpine:
    runs-on: ubuntu-latest
    container: node:alpine
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Check node before setup-node
      run: node --version; npm --version; which -a node; echo $PATH
    - name: set up node
      uses: actions/setup-node@v2
      with:
        node-version: 16
#         node-version-file: '.node-version'
#         cache: 'yarn'
    - name: get node version
      run: node --version; npm --version; which -a node; echo $PATH
#     - name: install correct yarn version
#       run: npm install --global --force yarn@1.22.17
#     - name: install dependencies
#       run: make yarn-install
  test-node-ubuntu:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: set up node
      uses: actions/setup-node@v2
      with:
        node-version: 16
#         node-version-file: '.node-version'
#         cache: 'yarn'
    - name: get node version
      run: node --version; npm --version; which -a node; echo $PATH
#     - name: install correct yarn version
#       run: npm install --global --force yarn@1.22.17
#     - name: install dependencies
#       run: make yarn-install
