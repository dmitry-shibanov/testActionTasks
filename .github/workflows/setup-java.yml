name: Setup-java
on:
  workflow_dispatch:
  
jobs:
  test-ip-ubuntu:
    runs-on: ${{ matrix.os }}
#     defaults:
#       run:
#         shell: bash
#     env:
#       PIP_DISABLE_PIP_VERSION_CHECK: 1
#       PIP_NO_PYTHON_VERSION_WARNING: 1
#       PIP_ROOT_USER_ACTION: ignore
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
#         version: [3.8, 3.9, "3.10", 3.11, 2.7, 3.9-dev, ">=3.8,<3.10", ">3.8", ">3.8"]
    steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           repository: pytorch/TensorRT
#           ref: main
    
    
#       - run: echo $env:PATH
#         shell: pwsh
#       - name: Download python 2.7
#         run: |
#           wget https://github.com/actions/python-versions/releases/download/2.7.18-87224/python-2.7.18-linux-22.04-x64.tar.gz -O ${{ runner.temp }}/python-2.7.18-linux-22.04-x64.tar.gz
#           echo "temporary directory"
#           ls ${{ runner.temp }}
#           echo "unpack tar.gz"
#           mkdir ${{ runner.temp }}/python-2.7.18-linux-22.04-x64
#           tar -xzvf ${{ runner.temp }}/python-2.7.18-linux-22.04-x64.tar.gz -C ${{ runner.temp }}/python-2.7.18-linux-22.04-x64
#           echo "temporary directory"
#           ls ${{ runner.temp }}
      - run: echo ${{ runner.temp }}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          architecture: arm64
      - uses: actions/setup-python@v4 # dmitry-shibanov/setup-go@unpack-directly
        with:
          python-version: 2.7
          allow-prereleases: true
#           cache: false
      - run: python3 --version
#       - run: pip install pandas
#       - run: python -m pip install --upgrade pip==22.3.1
      - run: python3 -m pip debug
#       - name: Run script
#         run: |
#           echo "run script"
#           bash setup.sh
#         working-directory: ${{ runner.temp }}/python-2.7.18-linux-22.04-x64


  test-go-full:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.17.4
#           cache: false
      - run: go version


#   issue_candidate:
#     runs-on: ubuntu-20.04

#     container:
#       image: ${{ matrix.os }}

#     strategy:
#       fail-fast: false

#       matrix:
#         os:
#           - 'centos:7'
#         python:
#           - '3.6'
#           - '3.7'
#           - '3.8'
#           - '3.9'
#           - '3.10'
#     steps:
#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python }}

#       - name: Check that Python is ok
#         run: python --version

#   test:
#     runs-on: ubuntu-22.04
#     container: ubuntu:20.04
#     steps:
#       - run: rm -rf /__t/Python/*
#       - uses: actions/setup-python@v4
#         with:
#           python-version: "3.10"

#       - name: python-check
#         run: python -V
#         shell: bash
